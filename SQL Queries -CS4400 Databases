# Queries for Company databases:

practiceQuery1: [book 1] Retrieve the first name, last name and address of all employees who work for the
'Research' department.

drop view if exists practiceQuery1;
create view practiceQuery1 as
select fname, lname, address from employee where dno in (select dnumber from
department where dname = 'Research');

practiceQuery2: [book 2] For every project located in 'Stafford', list the project number, the controlling
department number, and the department manager's last name, address, and birth date.

drop view if exists practiceQuery2;
create view practiceQuery2 as
select pnumber, dnum, lname, address, bdate from project, department, employee
where dnum = dnumber and mgrssn = ssn and plocation = 'Stafford';

practiceQuery3: [book 3] Find the names of employees who work on all the projects controlled by department
number 5.

drop view if exists practiceQuery3;
select * from employee join works_on on ssn = essn
where pno = all (select pnumber from project where dnum = 5)
and pno not in (select pnumber from project where dnum != 5);
/*

practiceQuery4: [book 4] Make a list of project numbers for projects that involve an employee whose last
name is 'Smith', either as a worker or as a manager of the department that controls the project.

drop view if exists practiceQuery4;
create view practiceQuery4 as
(select pno from works_on, employee where essn = ssn and lname = 'Smith') union
(select pnumber from project, department, employee where dnum = dnumber and mgrssn
= ssn and lname = 'Smith');

practiceQuery5: [book 5] List the names of all employees with two or more dependents.

drop view if exists practiceQuery5;
create view practiceQuery5 as
select fname, lname from employee where ssn in
(select essn from dependent group by essn having count(*) >= 2);

practiceQuery6: [book 6] Retrieve the names of employees who have no dependents.

drop view if exists practiceQuery6;
create view practiceQuery6 as
select fname, lname from employee where ssn not in
(select essn from dependent);

practiceQuery7: [book 7] List the names of managers who have at least one dependent.

drop view if exists practiceQuery7;
create view practiceQuery7 as
select fname, lname from employee where ssn in (select essn from dependent)
and ssn in (select mgrssn from department);

practiceQuery8: [book 8] For each employee, retrieve the employee's first and last name and the first and last
name of his or her immediate supervisor.

drop view if exists practiceQuery8;
create view practiceQuery8 as
select tableA.fname as A_fname, tableA.lname as A_lname, tableB.fname as B_fname,
tableB.lname as B_lname
from employee as tableA left outer join employee as tableB on tableA.superssn =
tableB.ssn;

practiceQuery9: [book 9] Select all of the employee's Social Security Numbers.

drop view if exists practiceQuery9;
create view practiceQuery9 as
select ssn from employee;

practiceQuery10: [book 10] Select all possible combinations of the employee's Social Security Numbers and
department names.

drop view if exists practiceQuery10;
create view practiceQuery10 as
select ssn, dname from employee, department;

practiceQuery11: [book 11] Retrieve the distinct salaries of all of the employees.

drop view if exists practiceQuery11;
create view practiceQuery11 as
select distinct salary from employee;

practiceQuery12: [book 12] Retrieve the first and last names of all employees whose address is in Houston,
Texas.

drop view if exists practiceQuery12;
create view practiceQuery12 as
select fname, lname from employee where address like '%Houston TX%';

practiceQuery13: [book 13] Show the first and last names and resulting salaries if every employee working on
the 'ProductX' project is given a 10% raise.

drop view if exists practiceQuery13;
create view practiceQuery13 as
select fname, lname, salary from employee where ssn not in
(select essn from works_on, project where pno = pnumber and pname = 'ProductX')
union
select fname, lname, salary * 1.10 from employee where ssn in
(select essn from works_on, project where pno = pnumber and pname = 'ProductX')

practiceQuery14: [book 14] Retrieve all information for employees in department 5 whose salary is between
$30,000 and $40,000.

drop view if exists practiceQuery14;
create view practiceQuery14 as
select * from employee where dno = 5 and salary between 30000 and 40000;

practiceQuery15: [book 15] Retrieve a list of department names, employee first and last names, and the
project names they are working on, ordered by department and, within each department, ordered
alphabetically by last name, then first name.

drop view if exists practiceQuery15;
create view practiceQuery15 as
select dname, lname, fname, pname from department, employee, works_on, project
where dnumber = dno and ssn = essn and pno = pnumber
order by dname, lname, fname;

practiceQuery16: [book 16] Retrieve the name of each employee who has a dependent with the same first
name and is the same sex as the employee.

drop view if exists practiceQuery16;
create view practiceQuery16 as
select distinct fname, lname from employee, dependent
where ssn = essn and fname = dependent_name and employee.sex = dependent.sex;

practiceQuery17: [book 17] Retrieve the Social Security numbers of all employees who work on project
numbers 1, 2 or 3.

drop view if exists practiceQuery17;
create view practiceQuery17 as
select ssn from employee where ssn in (select essn from works_on where pno in (1,
2, 3));

practiceQuery18: [book 18] Retrieve the names of all employees who do not have supervisors.

drop view if exists practiceQuery18;
create view practiceQuery18 as
select fname, lname from employee where superssn is null;

practiceQuery19: [book 19] Find the sum of the salaries of all employees, the maximum salary, the minimum
salary, and the average salary.

drop view if exists practiceQuery19;
create view practiceQuery19 as
select sum(salary), max(salary), min(salary), avg(salary) from employee;

practiceQuery20: [book 20] Find the sum of the salaries of all employees of the 'Research' department, as well
as the maximum salary, the minimum salary, and the average salary in this department.

drop view if exists practiceQuery20;
create view practiceQuery20 as
select sum(salary), max(salary), min(salary), avg(salary) from employee where dno
in
(select dnumber from department where dname = 'Research');

practiceQuery21: [book 21] Retrieve the total number of employees in the company.

drop view if exists practiceQuery21;
create view practiceQuery21 as
select count(*) from employee;

practiceQuery22: [book 22] Retrieve the total number of employees in the 'Research' department.

drop view if exists practiceQuery22;
create view practiceQuery22 as
select count(*) from employee where dno in
(select dnumber from department where dname = 'Research');

practiceQuery23: [book 23] Count the number of distinct salary values in the database.

drop view if exists practiceQuery23;
create view practiceQuery23 as
select count(distinct salary) from employee;

practiceQuery24: [book 24] For each department, retrieve the department number, the number of employees
in the department, and their average salary.

drop view if exists practiceQuery24;
create view practiceQuery24 as
select dnumber, count(ssn), avg(salary) from department, employee where dnumber =
dno group by dnumber
union (select dnumber, 0, 0 from department where dnumber not in (select dno from
employee));

practiceQuery25: [book 25] For each project, retrieve the project number, the project name, and the number
of employees who work on that project. (Null employees will be interpreted as zero employees).

drop view if exists practiceQuery25;
create view practiceQuery25 as
select pnumber, pname, count(distinct essn) from project left outer join works_on
on pnumber = pno group by pname, pnumber;

practiceQuery26: [book 26] For each project on which more than two employees work, retrieve the project
number, the project name, and the number of employees who work on the project.

drop view if exists practiceQuery26;
create view practiceQuery26 as
select pnumber, pname, count(distinct essn) from project left outer join works_on
on pnumber = pno group by pname, pnumber having count(distinct essn) > 2;

practiceQuery27: [book 27] For each project, retrieve the project number, the project name, and the number
of employees from department 5 who work on the project.

drop view if exists practiceQuery27;
create view practiceQuery27 as
select pnumber, pname, count(distinct essn) from project left outer join
(select essn , pno from works_on where essn in (select ssn from employee where dno
= 5)) as temp
on pnumber = pno group by pname, pnumber;

practiceQuery28: [book 28] For each department that has less than four* employees, retrieve the department
number and the number of its employees who are making more than $25,000*. (Less than four employees
instead of more than five, and $25,000 instead of $40,000 to make the results more fruitful.)

drop view if exists practiceQuery28;
create view practiceQuery28 as
select dno, count(ssn) from employee where salary > 25000 and dno in
(select dno from employee group by dno having count(ssn) < 4) group by dno;

practiceQuery29: [book 1c] Retrieve all of the attribute values for any employee who works in department 5.

drop view if exists practiceQuery29;
create view practiceQuery29 as
select * from employee where dno = 5;

practiceQuery30: [book 1d] Retrieve all of the attributes for each employee and the department for which he
or she works.

drop view if exists practiceQuery30;
create view practiceQuery30 as
select * from employee, department where dno = dnumber;

practiceQuery31: [book 12a] Find the first name, last name and birthdate of the employees who were born
during the 1950s.

drop view if exists practiceQuery31;
create view practiceQuery31 as
select fname, lname, bdate from employee where bdate between '1950-01-01' and
'1959-12-31';

practiceQuery32: [book 6_10a] Retrieve the first and last names of all employees in department 5 who work
more than 10 hours per week on the ProductX project.

drop view if exists practiceQuery32;
create view practiceQuery32 as
select fname, lname from employee where dno = 5 and ssn in (select essn from
works_on where pno in
(select pnumber from project where pname = 'ProductX') group by essn having
sum(hours) > 10);

practiceQuery33: [book 6_10b] List the first and last names of all employees who have a dependent with the
same first name as themselves.

drop view if exists practiceQuery33;
create view practiceQuery33 as
select fname, lname from employee, dependent where ssn = essn and fname =
dependent_name;

practiceQuery34: [book 6_10c] Find the first and last names of all employees who are directly supervised by
'Franklin Wong'.

drop view if exists practiceQuery34;
create view practiceQuery34 as
select fname, lname from employee
where superssn = (select ssn from employee where fname = 'Franklin' and lname =
'Wong');

practiceQuery35: [book 7_7a] Retrieve the first and last names of all employees who work in the department
that has the employee with the highest salary among all employees.

drop view if exists practiceQuery35;
create view practiceQuery35 as
select fname, lname from employee where dno in
(select dno from employee group by dno having max(salary) >= (select max(salary)
from employee));

practiceQuery36: [book 7_7b] Retrieve the first and last names of all employees whose supervisor's supervisor
has '888665555' for their SSN.

drop view if exists practiceQuery36;
create view practiceQuery36 as
select fname, lname from employee where superssn in
(select ssn from employee where superssn = '888665555');

practiceQuery37: [book 7_7c] Retrieve the first and last names of employees who make at least $10,000 more
than the employee who is paid the least in the company.

drop view if exists practiceQuery37;
create view practiceQuery37 as
select fname, lname from employee where salary >= (select min(salary) from
employee) + 10000;

Practice Queries: Nested Queries & Set Operations (including Union & Correlated Subqueries)

practiceQuery100: Retrieve the total number of employees whose salaries exceed $25,000 in each
department.

drop view if exists practiceQuery100;
create view practiceQuery100 as
select dno, count(*) from employee where salary > 25000 group by dno;

practiceQuery101: Retrieve the total number of employees whose salaries exceed $25,000 in all of the
departments except Headquarters.

drop view if exists practiceQuery101;
create view practiceQuery101 as
select dno, count(*) from employee where salary > 25000 and dno not in
(select dnumber from department where dname = 'Headquarters') group by dno;

practiceQuery102: Retrieve the department numbers for departments where fewer than four employees
work.

drop view if exists practiceQuery102;
create view practiceQuery102 as
select dno from employee group by dno having count(*) < 4;

practiceQuery103: Retrieve the total number of employees whose salaries exceed $25,000 per department,
but only for departments where fewer than four employees work.

drop view if exists practiceQuery103;
create view practiceQuery103 as
select dno, count(*) from employee where salary > 25000
and dno in (select dno from employee group by dno having count(*) < 4)
group by dno;

practiceQuery104: Retrieve the first name, last name and address for each employee that has a dependent
daughter.

drop view if exists practiceQuery104;
create view practiceQuery104 as
select fname, lname, address from employee where ssn in
(select essn from dependent where relationship = 'Daughter');

practiceQuery105: Retrieve the first name, last name and address for each employee that is working on a
project that is located in Houston.

drop view if exists practiceQuery105;
create view practiceQuery105 as
select fname, lname, address from employee where ssn in
(select essn from works_on where pno in
(select pnumber from project where plocation = 'Houston'));

practiceQuery106: Retrieve the Social Security Number (ssn) of employees who earn more than 25000 in
salary or work on project 20.

drop view if exists practiceQuery106;
create view practiceQuery106 as
(select ssn from employee where salary > 25000) union
(select essn from works_on where pno = 20);

practiceQuery107: Retrieve the Social Security Number (ssn) of each employee who earns more than 25000 in
salary and also works on project 20.

drop view if exists practiceQuery107;
create view practiceQuery107 as
select ssn from employee where salary > 25000 and ssn in
(select essn from works_on where pno = 20);

practiceQuery108: Retrieve the Social Security Number (ssn) of each employee who earns more than 25000 in
salary but doesn't work on project 20.

drop view if exists practiceQuery108;
create view practiceQuery108 as
select ssn from employee where salary > 25000 and ssn not in
(select essn from works_on where pno = 20);

Practice Queries: Cartesian Products & Joins (Inner, Outer & Natural)

practiceQuery120: Display the first name, last name, address, department number (dno and dnumber) and
department name for all combinations of the employee and department record sets.
truncated results shown – full result set has 24 rows

drop view if exists practiceQuery120;
create view practiceQuery120 as
select fname, lname, address, dno, dnumber, dname from employee, department;

practiceQuery121: Retrieve the first name, last name, address, department name and number of all
employees. [USE CARTESIAN PRODUCT TECHNIQUE]

drop view if exists practiceQuery121;
create view practiceQuery121 as
select fname, lname, address, dname, dno from employee, department where dno =
dnumber;

practiceQuery122: Retrieve the first name, last name, address, department name and number of all
employees. [USE INNER JOIN TECHNIQUE]

drop view if exists practiceQuery122;
create view practiceQuery122 as
select fname, lname, address, dname, dno from employee join department on dno =
dnumber;

practiceQuery123: Retrieve the first name, last name, address, department name and number of all
employees. [USE NATURAL JOIN TECHNIQUE]

drop view if exists practiceQuery123;
create view practiceQuery123 as
select fname, lname, address, dname, dno from employee natural join
(select dname, dnumber as dno from department) as temp;

practiceQuery124: Retrieve the employee's first and last name and address, along with their supervisor's
Social Security Number, first and last names for all employees.

drop view if exists practiceQuery124;
create view practiceQuery124 as
select worker.fname as work_fname, worker.lname as work_lname, worker.address,
worker.superssn, supervisor.fname, supervisor.lname
from employee as worker left outer join employee as supervisor on worker.superssn =
supervisor.ssn;

practiceQuery125: Retrieve the name and birthdate of all dependents, along with the first and last name of
their sponsor (employee). Include the names of all employees in your response, to include the first and last
names of employees who don't have any dependents.

drop view if exists practiceQuery125;
create view practiceQuery125 as
select dependent_name, dependent.bdate, fname, lname from dependent right outer
join employee on essn = ssn;

practiceQuery126: Retrieve the first and last name, department number and department name for all
department managers.

drop view if exists practiceQuery126;
create view practiceQuery126 as
select fname, lname, dname, dnumber from employee join department on ssn = mgrssn;

practiceQuery127: Retrieve the first and last name, department number of all employees, along with the
name of the department that they manage (if applicable).

drop view if exists practiceQuery127;
create view practiceQuery127 as
select fname, lname, dno, dname from employee left outer join department on ssn =
mgrssn;

practiceQuery128: Display the first and last names of employees along with the names of projects that are
located in the city where they live (using the employee's address). Include the employee's address along with
the project's location.

drop view if exists practiceQuery128;
create or replace view practiceQuery128 as
select fname, lname, address, pname, plocation from employee, project where address
like concat('%',plocation,'%');

practiceQuery129: Find the first and last names and birthdates of the employees (supervisors included) who
are old as (or older than) one or more of the department managers. Include the first and last names and
birthdates of the managers as well.drop view if exists practiceQuery129;

create view practiceQuery129 as
select worker.fname as work_fname, worker.lname as work_lname, worker.bdate as
work_bdate, supervisor.fname, supervisor.lname, supervisor.bdate
from (employee as worker) join (employee as supervisor) on worker.bdate <
supervisor.bdate
where supervisor.ssn in (select mgrssn from department);

